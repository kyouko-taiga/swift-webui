daemon off;
worker_processes 4;
user www-data;

env APPLICATION_ID;
env APPLICATION_SECRET;
env DOCKER_URL;
env POSTGRES_URL;
env POSTGRES_DATABASE;

events {
  worker_connections 4096;
}

http {

  include /usr/local/openresty/nginx/conf/mime.types;
  resolver "8.8.8.8" "4.4.4.4";

  server {

      set_by_lua $APPLICATION_ID     'return os.getenv("APPLICATION_ID")';
      set_by_lua $APPLICATION_SECRET 'return os.getenv("APPLICATION_SECRET")';
      set_by_lua $DOCKER_URL         'return os.getenv("DOCKER_URL")';
      set_by_lua $POSTGRES_URL       'return os.getenv("POSTGRES_URL")';
      set_by_lua $POSTGRES_DATABASE  'return os.getenv("POSTGRES_DATABASE")';

      listen 8080;
      server_name "localhost";
      lua_code_cache  on;
      gzip            on;
      gzip_types      text/plain
                      text/html
                      application/css
                      application/javascript
                      application/lua
                      application/json;

      location / {
          try_files $uri @app;
      }

      location "~^/(?<user>[a-zA-Z0-9_-]+)/(?<workspace>[a-zA-Z0-9_-]+)/(?<what>[a-zA-Z0-9_-]+)$" {
        set $what_port "";
        access_by_lua_block {
          local Jwt    = require "jwt"
          local key    = "" -- TODO: get secret
          local token  = "" -- TODO: get token
          local claims = jwt.decode (token, { keys = { public = key } })
          if claims.user      ~= ngx.var.user
          or claims.workspace ~= ngx.var.workspace then
            ngx.exit (403)
          end
          if ngx.var.what == "notify"
          or ngx.var.what == "shell" then
            ngx.var.what_port = claims.port
          else
            ngx.exit (404)
          end
        }
        proxy_http_version 1.1;
        proxy_set_header Upgrade          $http_upgrade;
        proxy_set_header Connection       "upgrade";
        proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header Host             $host;
        proxy_pass http://localhost:$what_port;
      }

      location @app {
          include     /usr/local/openresty/nginx/conf/uwsgi_params;
          uwsgi_pass  unix:///tmp/uwsgi.sock;
          uwsgi_param APPLICATION_ID     $APPLICATION_ID;
          uwsgi_param APPLICATION_SECRET $APPLICATION_SECRET;
          uwsgi_param DOCKER_URL         $DOCKER_URL;
          uwsgi_param POSTGRES_URL       $POSTGRES_URL;
          uwsgi_param POSTGRES_DATABASE  $POSTGRES_DATABASE;
      }

      location /static {
          alias /www/static;
      }
  }

}
